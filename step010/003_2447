import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
	public static void main(String[] args) {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		// System.out.println() 으로 출력 시 시간 초과 발생
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		try {
			int num = Integer.parseInt(br.readLine().trim());
			
			// 값을 저장할 배열 선언
			char[][] arr = new char[num][num];
			
			// 공백으로 채움
			for(int i=0; i<num; i++) {
				for(int j=0; j<num; j++) {
					arr[i][j] = ' ';
				}
			}
			
			printStar(arr, num, 0, 0);
			
			// 출력
			for(int i=0; i<num; i++) {
				for(int j=0; j<num; j++) {
					bw.write(arr[i][j]);
				}
				bw.write("\n");
			}
			
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			try {
				bw.flush();
				bw.close();
				br.close();
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	// 재귀함수
	public static char[][] printStar(char[][] arr, int n, int x, int y) {
		// 배열의 크기가 3*3인 경우
		if(n == 3) {
			for(int i=x; i<x+n; i++) {
				for(int j=y; j<y+n; j++) {
					// 배열의 가장자리에만 별 저장
					if( i == x || i == x+n-1 || j == y || j == y+n-1 ) {
						arr[i][j] = '*';
					} 
				}
			}
		// 배열의 크기가 3n*3n(n>1)인 경우 
		} else {
			for(int i=x; i<x+n; i += n/3) {
				for(int j=y; j<y+n; j += n/3) {
					// 배열의 가장자리에서만 더 작은 단위의 별찍기 함수 호출
					if( i == x || i == x+n-n/3 || j == y || j == y+n-n/3 ) {
						arr = printStar(arr, n/3, i, j);
					}
				}
			}
		}
		
		return arr;
	}
}
